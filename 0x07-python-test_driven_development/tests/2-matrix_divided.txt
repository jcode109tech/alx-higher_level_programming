matrix_divided =__import__('2-matrix_divided').matrix_divided
# Test cases for matrix_divided function

# Import the matrix_divided function from the implementation file
matrix_divided = __import__('2-matrix_divided').matrix_divided

# Test case: Matrix division with integer divisor
>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
>>> div = 2
>>> matrix_divided(matrix, div)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]

# Test case: Matrix division with float divisor
>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
>>> div = 2.3
>>> matrix_divided(matrix, div)
[[0.43, 0.87, 1.3], [1.74, 2.17, 2.61], [3.04, 3.48, 3.91]]

# Test case: Matrix with floats and divisor as float
>>> matrix = [[1.5, 2.5], [3.5, 4.5]]
>>> div = 1.5
>>> matrix_divided(matrix, div)
[[1.0, 1.67], [2.33, 3.0]]

# Test case: Empty matrix (invalid)
>>> matrix = []
>>> div = 1
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test case: Non-list matrix (invalid)
>>> matrix = "not_a_matrix"
>>> div = 1
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test case: Empty sub-list in matrix (invalid)
>>> matrix = [[]]
>>> div = 1
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test case: Rows with different sizes (invalid)
>>> matrix = [[1, 2, 3], [4, 5], [6, 7, 8]]
>>> div = 2
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

# Test case: Divisor is zero (invalid)
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> div = 0
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

# Test case: Divisor is not a number (invalid)
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> div = "not_a_number"
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
    ...
TypeError: div must be a number

# Test case: Invalid matrix element (string instead of number)
>>> matrix = [[1, 2, "3"], [4, 5, 6]]
>>> div = 2
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats


# run test case file with `python3 -m doctest -v ./tests/2-matrix_divided.txt`
